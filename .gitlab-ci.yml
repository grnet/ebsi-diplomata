---

stages:
  - build
  - deploy

variables:
  GIT_DEPTH: 1
  DEPLOY_PATH: ~/ebsi-diplomata

# See https://docs.gitlab.com/ee/ci/ssh_keys/#ssh-keys-when-using-the-docker-executor
default:
  before_script:
    ## Install ssh-agent and rsync if not already installed.
    - apt-get update -y
    - apt-get install openssh-client rsync -y
    ## Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # Create the SSH directory and copy private key. Also set permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Add remote host pub key to known_hosts
    - ssh-keyscan $REMOTE_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -a --delete --exclude '.env-google' ${CI_PROJECT_DIR}/ ${REMOTE_USER}@${REMOTE_HOST}:${DEPLOY_PATH}

build-base-image:
  image: registry.docker.grnet.gr/dockerhub-cache/library/debian:buster-slim
  stage: build
  only:
    - develop
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - ssh ${REMOTE_USER}@${REMOTE_HOST} "cd ${DEPLOY_PATH} && sudo ./build-base-image.sh --tag local"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

deploy-service:
  image: registry.docker.grnet.gr/dockerhub-cache/library/debian:buster-slim
  stage: deploy
  only:
    - develop
  script:
    - ssh ${REMOTE_USER}@${REMOTE_HOST} "cd ${DEPLOY_PATH} && sudo --env-file .env-google up --build --remove-orphans"
